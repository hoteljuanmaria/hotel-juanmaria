/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    blogs: Blog;
    media: Media;
    categories: Category;
    rooms: Room;
    testimonials: Testimonial;
    experiences: Experience;
    users: User;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    blogs: BlogsSelect<false> | BlogsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    rooms: RoomsSelect<false> | RoomsSelect<true>;
    testimonials: TestimonialsSelect<false> | TestimonialsSelect<true>;
    experiences: ExperiencesSelect<false> | ExperiencesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    header: Header;
    footer: Footer;
    'home-page': HomePage;
    'experiences-page': ExperiencesPage;
    blogPage: BlogPage;
    currentMenu: CurrentMenu;
    'about-page': AboutPage;
    'privacy-policy-page': PrivacyPolicyPage;
    'faqs-page': FaqsPage;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    'home-page': HomePageSelect<false> | HomePageSelect<true>;
    'experiences-page': ExperiencesPageSelect<false> | ExperiencesPageSelect<true>;
    blogPage: BlogPageSelect<false> | BlogPageSelect<true>;
    currentMenu: CurrentMenuSelect<false> | CurrentMenuSelect<true>;
    'about-page': AboutPageSelect<false> | AboutPageSelect<true>;
    'privacy-policy-page': PrivacyPolicyPageSelect<false> | PrivacyPolicyPageSelect<true>;
    'faqs-page': FaqsPageSelect<false> | FaqsPageSelect<true>;
  };
  locale: 'en' | 'es';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null)
              | ({
                  relationTo: 'rooms';
                  value: string | Room;
                } | null)
              | ({
                  relationTo: 'experiences';
                  value: string | Experience;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
            /**
             * Optional section ID to append as a hash fragment (without #). Example: rooms-list
             */
            hash?: string | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (string | null) | Media;
  };
  layout: (CallToActionBlock | ContentBlock | MediaBlock | ArchiveBlock | FormBlock)[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  title: string;
  heroImage?: (string | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (string | Post)[] | null;
  categories?: (string | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (string | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  title: string;
  /**
   * Optional hex/rgb color used for UI badges
   */
  color?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (string | null) | Category;
  breadcrumbs?:
    | {
        doc?: (string | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string | null;
  totpSecret?: string | null;
  hasTotp?: boolean | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rooms".
 */
export interface Room {
  id: string;
  /**
   * The display name of the room (e.g., "Deluxe Ocean View Suite")
   */
  title: string;
  /**
   * Detailed description of the room and its features
   */
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Brief description for cards and previews (max 200 characters)
   */
  shortDescription?: string | null;
  /**
   * Upload high-quality images of the room. First image will be used as default.
   */
  images: {
    image: string | Media;
    alt: string;
    /**
     * Mark as the main image for this room
     */
    featured?: boolean | null;
    id?: string | null;
  }[];
  /**
   * Base price per night in COP
   */
  price: number;
  currency?: ('COP' | 'USD') | null;
  capacity: number;
  size: string;
  bedType: 'single' | 'double' | 'queen' | 'king' | 'twin' | 'bunk';
  amenities?:
    | {
        amenity?:
          | (
              | 'wifi'
              | 'air-conditioning'
              | 'tv'
              | 'safe'
              | 'minibar'
              | 'room-service'
              | 'parking'
              | 'airport-transfer'
              | 'breakfast'
              | 'balcony'
              | 'ocean-view'
              | 'city-view'
            )
          | null;
        /**
         * Add a custom amenity not in the list above
         */
        customAmenity?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Uncheck to temporarily disable bookings for this room
   */
  available?: boolean | null;
  /**
   * Featured rooms appear in special sections
   */
  featured?: boolean | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "experiences".
 */
export interface Experience {
  id: string;
  title: string;
  /**
   * Shown on the card component.
   */
  shortDescription?: string | null;
  hours?: string | null;
  /**
   * Shown as “Capacidad” on the card.
   */
  capacity?: string | null;
  halls?:
    | {
        name: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Shown as a short list on the card.
   */
  services_included?:
    | {
        text: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Options map to #sym:ServiceIcon values used on the site.
   */
  icon?: ('restaurant' | 'events' | 'celebration' | 'business' | 'romantic_dinner' | 'romantic_night') | null;
  featured?: boolean | null;
  /**
   * Shown in the “Sobre Este Servicio” section of the detail page.
   */
  longDescription?: string | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  gallery?:
    | {
        image: string | Media;
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  features?:
    | {
        text: string;
        id?: string | null;
      }[]
    | null;
  category?: string | null;
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Controls the info card on the right side of the detail page.
   */
  serviceInfo?: {
    availabilityText?: string | null;
    typeText?: string | null;
    reservationNote?: string | null;
    includedText?: string | null;
    supportText?: string | null;
    statusText?: string | null;
    locationText?: string | null;
    phoneText?: string | null;
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null)
            | ({
                relationTo: 'rooms';
                value: string | Room;
              } | null)
            | ({
                relationTo: 'experiences';
                value: string | Experience;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
          /**
           * Optional section ID to append as a hash fragment (without #). Example: rooms-list
           */
          hash?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null)
            | ({
                relationTo: 'rooms';
                value: string | Room;
              } | null)
            | ({
                relationTo: 'experiences';
                value: string | Experience;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
          /**
           * Optional section ID to append as a hash fragment (without #). Example: rooms-list
           */
          hash?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (string | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: string | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: string | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogs".
 */
export interface Blog {
  id: string;
  title: string;
  featured?: boolean | null;
  featuredImage?: (string | null) | Media;
  excerpt?: string | null;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  category: string | Category;
  /**
   * Estimated reading time in minutes
   */
  readTime?: number | null;
  author?: {
    name?: string | null;
    role?: string | null;
    avatar?: (string | null) | Media;
  };
  tags?:
    | {
        tag?: string | null;
        id?: string | null;
      }[]
    | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (string | User)[] | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: string;
  /**
   * Full name of the guest who left the testimonial
   */
  name: string;
  /**
   * Guest's location/origin (e.g., "Bogotá, Colombia")
   */
  location: string;
  /**
   * The testimonial text/review content
   */
  comment: string;
  /**
   * Optional profile picture of the guest
   */
  avatar?: (string | null) | Media;
  /**
   * Overall rating from 1 to 5 stars
   */
  rating: number;
  /**
   * Date when the testimonial was given
   */
  date: string;
  /**
   * Optional detailed scores for different aspects
   */
  scores?: {
    habitaciones?: number | null;
    servicio?: number | null;
    ubicacion?: number | null;
  };
  /**
   * Platform where the review was originally posted
   */
  platform?: ('Google' | 'TripAdvisor' | 'Booking.com' | 'Expedia' | 'Direct' | 'Other') | null;
  /**
   * Type of travel or guest category
   */
  travelType?: string | null;
  /**
   * Key highlights mentioned in the testimonial
   */
  highlights?:
    | {
        highlight: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Featured testimonials appear in the hero carousel
   */
  featured?: boolean | null;
  /**
   * Uncheck to temporarily hide this testimonial
   */
  published?: boolean | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: string;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: string | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (string | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        categoryID?: string | null;
        title?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: string;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'blogs';
        value: string | Blog;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'rooms';
        value: string | Room;
      } | null)
    | ({
        relationTo: 'testimonials';
        value: string | Testimonial;
      } | null)
    | ({
        relationTo: 'experiences';
        value: string | Experience;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'redirects';
        value: string | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: string | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: string | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                    hash?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
              hash?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
              hash?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogs_select".
 */
export interface BlogsSelect<T extends boolean = true> {
  title?: T;
  featured?: T;
  featuredImage?: T;
  excerpt?: T;
  content?: T;
  category?: T;
  readTime?: T;
  author?:
    | T
    | {
        name?: T;
        role?: T;
        avatar?: T;
      };
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  color?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "rooms_select".
 */
export interface RoomsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  shortDescription?: T;
  images?:
    | T
    | {
        image?: T;
        alt?: T;
        featured?: T;
        id?: T;
      };
  price?: T;
  currency?: T;
  capacity?: T;
  size?: T;
  bedType?: T;
  amenities?:
    | T
    | {
        amenity?: T;
        customAmenity?: T;
        id?: T;
      };
  available?: T;
  featured?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials_select".
 */
export interface TestimonialsSelect<T extends boolean = true> {
  name?: T;
  location?: T;
  comment?: T;
  avatar?: T;
  rating?: T;
  date?: T;
  scores?:
    | T
    | {
        habitaciones?: T;
        servicio?: T;
        ubicacion?: T;
      };
  platform?: T;
  travelType?: T;
  highlights?:
    | T
    | {
        highlight?: T;
        id?: T;
      };
  featured?: T;
  published?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "experiences_select".
 */
export interface ExperiencesSelect<T extends boolean = true> {
  title?: T;
  shortDescription?: T;
  hours?: T;
  capacity?: T;
  halls?:
    | T
    | {
        name?: T;
        id?: T;
      };
  services_included?:
    | T
    | {
        text?: T;
        id?: T;
      };
  icon?: T;
  featured?: T;
  longDescription?: T;
  content?: T;
  gallery?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  features?:
    | T
    | {
        text?: T;
        id?: T;
      };
  category?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  serviceInfo?:
    | T
    | {
        availabilityText?: T;
        typeText?: T;
        reservationNote?: T;
        includedText?: T;
        supportText?: T;
        statusText?: T;
        locationText?: T;
        phoneText?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  totpSecret?: T;
  hasTotp?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        categoryID?: T;
        title?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null)
            | ({
                relationTo: 'rooms';
                value: string | Room;
              } | null)
            | ({
                relationTo: 'experiences';
                value: string | Experience;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Optional section ID to append as a hash fragment (without #). Example: rooms-list
           */
          hash?: string | null;
        };
        hasDropdown?: boolean | null;
        dropdownItems?:
          | {
              link: {
                type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?:
                  | ({
                      relationTo: 'pages';
                      value: string | Page;
                    } | null)
                  | ({
                      relationTo: 'posts';
                      value: string | Post;
                    } | null)
                  | ({
                      relationTo: 'rooms';
                      value: string | Room;
                    } | null)
                  | ({
                      relationTo: 'experiences';
                      value: string | Experience;
                    } | null);
                url?: string | null;
                label: string;
                /**
                 * Optional section ID to append as a hash fragment (without #). Example: rooms-list
                 */
                hash?: string | null;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  site?: {
    /**
     * Se usa cuando no hay nombre de hotel.
     */
    name?: string | null;
    tagline?: string | null;
    /**
     * Texto corto bajo el nombre/lema
     */
    description?: string | null;
  };
  contact: {
    hotel: {
      name?: string | null;
      address: {
        street?: string | null;
        neighborhood?: string | null;
        city: string;
        state?: string | null;
        country?: string | null;
      };
    };
    phone?: {
      main?: string | null;
      secondary?: string | null;
      whatsapp?: string | null;
    };
    email?: {
      reservations?: string | null;
      marketing?: string | null;
    };
    hours?:
      | {
          label?: string | null;
          value?: string | null;
          id?: string | null;
        }[]
      | null;
    /**
     * Incluye URLs completas con https://
     */
    social?: {
      facebook?: string | null;
      instagram?: string | null;
      twitter?: string | null;
      youtube?: string | null;
      linkedin?: string | null;
    };
  };
  /**
   * Enlaces principales (Inicio, Sobre Nosotros, etc.)
   */
  companyLinks?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null)
            | ({
                relationTo: 'rooms';
                value: string | Room;
              } | null)
            | ({
                relationTo: 'experiences';
                value: string | Experience;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Optional section ID to append as a hash fragment (without #). Example: rooms-list
           */
          hash?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  /**
   * Enlaces de utilidad (Reservas, FAQ, etc.)
   */
  usefulLinks?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null)
            | ({
                relationTo: 'rooms';
                value: string | Room;
              } | null)
            | ({
                relationTo: 'experiences';
                value: string | Experience;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Optional section ID to append as a hash fragment (without #). Example: rooms-list
           */
          hash?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  /**
   * Campo de compatibilidad con versiones anteriores
   */
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null)
            | ({
                relationTo: 'rooms';
                value: string | Room;
              } | null)
            | ({
                relationTo: 'experiences';
                value: string | Experience;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Optional section ID to append as a hash fragment (without #). Example: rooms-list
           */
          hash?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  privacyLink: {
    link: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: string | Page;
          } | null)
        | ({
            relationTo: 'posts';
            value: string | Post;
          } | null)
        | ({
            relationTo: 'rooms';
            value: string | Room;
          } | null)
        | ({
            relationTo: 'experiences';
            value: string | Experience;
          } | null);
      url?: string | null;
      label: string;
      /**
       * Optional section ID to append as a hash fragment (without #). Example: rooms-list
       */
      hash?: string | null;
    };
  };
  termsLink: {
    link: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: string | Page;
          } | null)
        | ({
            relationTo: 'posts';
            value: string | Post;
          } | null)
        | ({
            relationTo: 'rooms';
            value: string | Room;
          } | null)
        | ({
            relationTo: 'experiences';
            value: string | Experience;
          } | null);
      url?: string | null;
      label: string;
      /**
       * Optional section ID to append as a hash fragment (without #). Example: rooms-list
       */
      hash?: string | null;
    };
  };
  enabled?: boolean | null;
  title?: string | null;
  description?: string | null;
  placeholder?: string | null;
  buttonLabel?: string | null;
  showScrollTop?: boolean | null;
  /**
   * Muestra el botón cuando se supera este scroll vertical.
   */
  scrollTopThreshold?: number | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-page".
 */
export interface HomePage {
  id: string;
  /**
   * Main title displayed on the hero section
   */
  heroTitle: string;
  /**
   * Subtitle text displayed below the main title
   */
  heroSubtitle: string;
  /**
   * Background image for the hero section
   */
  heroBackgroundImage: string | Media;
  /**
   * Text for the mobile booking button
   */
  mobileButtonText: string;
  /**
   * Text for the desktop booking button
   */
  desktopButtonText: string;
  /**
   * Title for the rooms carousel section
   */
  roomsTitle: string;
  /**
   * Subtitle for the rooms carousel section
   */
  roomsSubtitle: string;
  /**
   * Background color for the rooms section
   */
  roomsBackgroundColor: 'gray-50' | 'white' | 'blue-50';
  /**
   * Title for the testimonials section
   */
  testimonialsTitle: string;
  /**
   * Subtitle for the testimonials section
   */
  testimonialsSubtitle: string;
  /**
   * Background image for the testimonials section
   */
  testimonialsBackgroundImage: string | Media;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "experiences-page".
 */
export interface ExperiencesPage {
  id: string;
  title: string;
  subtitle?: string | null;
  descriptionText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  heroBackground?: (string | null) | Media;
  /**
   * Cards de estadísticas en el hero. Ej.: 6 Servicios Premium, 4 Salones para Eventos...
   */
  features?:
    | {
        number: string;
        label: string;
        id?: string | null;
      }[]
    | null;
  intro?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  sectionImages?:
    | {
        image: string | Media;
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Define las columnas a mostrar en la tabla comparativa de salones.
   */
  capacityOptions?:
    | {
        key: 'size' | 'banquet' | 'classroom' | 'conference';
        label: string;
        id?: string | null;
      }[]
    | null;
  halls?:
    | {
        name: string;
        size?: number | null;
        banquet?: number | null;
        classroom?: number | null;
        conference?: number | null;
        id?: string | null;
      }[]
    | null;
  hallsInfoNote?: string | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogPage".
 */
export interface BlogPage {
  id: string;
  title: string;
  subtitle?: string | null;
  introduction?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  heroImage?: (string | null) | Media;
  featured?: {
    enabled?: boolean | null;
    posts?: (string | Blog)[] | null;
  };
  newsletter?: {
    title?: string | null;
    description?: string | null;
    buttonText?: string | null;
  };
  labels?: {
    allCategoryLabel?: string | null;
    readArticle?: string | null;
    read?: string | null;
    subscribeTitle?: string | null;
    subscribeCta?: string | null;
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * PDF actual del menú del hotel (la URL /menu siempre redirige al último PDF).
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "currentMenu".
 */
export interface CurrentMenu {
  id: string;
  /**
   * Sube aquí el PDF vigente del menú.
   */
  pdf: string | Media;
  note?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about-page".
 */
export interface AboutPage {
  id: string;
  heroTitle: string;
  heroSubtitle: string;
  heroBackgroundImage?: (string | null) | Media;
  panoramicImage?: (string | null) | Media;
  storyTitle: string;
  storyContent: string;
  storyHighlights?:
    | {
        text: string;
        id?: string | null;
      }[]
    | null;
  storyImage?: (string | null) | Media;
  heritageTitle: string;
  heritageContent: string;
  heritageImage?: (string | null) | Media;
  missionTitle: string;
  missionContent: string;
  visionTitle: string;
  visionContent: string;
  values?:
    | {
        title: string;
        description: string;
        icon: 'shield-check' | 'handshake' | 'heart' | 'trending-up' | 'calendar' | 'award';
        id?: string | null;
      }[]
    | null;
  qualityPolicyTitle: string;
  qualityPolicyContent: string;
  qualityPolicyImage?: (string | null) | Media;
  team?:
    | {
        name: string;
        position: string;
        bio: string;
        image?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
  yearsOfExperience: number;
  satisfiedGuests: number;
  teamMembers: number;
  foundedYear: number;
  galleryImages?:
    | {
        image?: (string | null) | Media;
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  timelineEvents?:
    | {
        year: number;
        /**
         * Optional specific date within the year
         */
        date?: string | null;
        /**
         * For events spanning multiple years (e.g., "1990-1995")
         */
        yearRange?: string | null;
        title: string;
        description: string;
        type: 'legal' | 'hito' | 'crecimiento' | 'modernizacion' | 'cultural' | 'aniversario' | 'actual';
        importance: 'alto' | 'medio' | 'bajo';
        /**
         * Lucide icon name (e.g., "calendar", "building", "award")
         */
        icon: string;
        id?: string | null;
      }[]
    | null;
  historyStats: {
    foundedYear: number;
    openedYear: number;
    yearsInService: number;
    legalAnniversary: number;
    operationalAnniversary: number;
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "privacy-policy-page".
 */
export interface PrivacyPolicyPage {
  id: string;
  title: string;
  /**
   * Date when the privacy policy was last updated
   */
  lastUpdated: string;
  /**
   * Main introduction paragraph displayed below the title
   */
  introduction: string;
  sections: {
    title: string;
    content: string;
    /**
     * Icon will be auto-selected based on section title if not specified
     */
    icon?:
      | ('file-text' | 'eye' | 'shield' | 'lock' | 'users' | 'clock' | 'globe' | 'settings' | 'mail' | 'phone')
      | null;
    id?: string | null;
  }[];
  contactSection: {
    title?: string | null;
    email: {
      label?: string | null;
      address: string;
    };
    phone: {
      label?: string | null;
      number: string;
    };
    businessHours?: {
      label?: string | null;
      schedule?: string | null;
    };
  };
  uiText?: {
    loadingMessage?: string | null;
    errorMessage?: string | null;
    backToTopButton?: string | null;
    lastUpdatedPrefix?: string | null;
  };
  design?: {
    /**
     * Control whether to display animated floating orbs in the background
     */
    showFloatingOrbs?: boolean | null;
    /**
     * Control whether to enable hover effects and transitions
     */
    enableAnimations?: boolean | null;
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqs-page".
 */
export interface FaqsPage {
  id: string;
  /**
   * Main title displayed on the FAQs page
   */
  title: string;
  /**
   * Optional subtitle or description for the FAQs page
   */
  subtitle?: string | null;
  /**
   * Optional background image for the FAQs page hero section
   */
  backgroundImage?: (string | null) | Media;
  /**
   * Organize FAQs into different categories for better navigation
   */
  categories?:
    | {
        categoryTitle: string;
        /**
         * Optional description for this FAQ category
         */
        categoryDescription?: string | null;
        categoryIcon:
          | 'clock'
          | 'utensils'
          | 'car'
          | 'shield'
          | 'help-circle'
          | 'wifi'
          | 'heart'
          | 'plane'
          | 'credit-card'
          | 'database'
          | 'leaf';
        questions: {
          question: string;
          answer: string;
          /**
           * Optional specific icon for this question
           */
          questionIcon?:
            | (
                | 'clock'
                | 'utensils'
                | 'car'
                | 'wifi'
                | 'shield'
                | 'heart'
                | 'plane'
                | 'x'
                | 'leaf'
                | 'credit-card'
                | 'database'
                | 'help-circle'
              )
            | null;
          /**
           * Mark as featured to highlight this question
           */
          featured?: boolean | null;
          id?: string | null;
        }[];
        id?: string | null;
      }[]
    | null;
  /**
   * Title for the contact support section at the bottom
   */
  supportTitle?: string | null;
  /**
   * Description text for the support section
   */
  supportDescription?: string | null;
  contactButtonText?: string | null;
  /**
   * URL or route for the contact button
   */
  contactButtonLink?: string | null;
  backToTopText?: string | null;
  /**
   * Display the quick stats section (total questions, categories, etc.)
   */
  showStats?: boolean | null;
  /**
   * Enable search functionality for FAQs (future feature)
   */
  enableSearch?: boolean | null;
  /**
   * Enable visual animations and transitions
   */
  animationsEnabled?: boolean | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              hash?: T;
            };
        hasDropdown?: T;
        dropdownItems?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    hash?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  site?:
    | T
    | {
        name?: T;
        tagline?: T;
        description?: T;
      };
  contact?:
    | T
    | {
        hotel?:
          | T
          | {
              name?: T;
              address?:
                | T
                | {
                    street?: T;
                    neighborhood?: T;
                    city?: T;
                    state?: T;
                    country?: T;
                  };
            };
        phone?:
          | T
          | {
              main?: T;
              secondary?: T;
              whatsapp?: T;
            };
        email?:
          | T
          | {
              reservations?: T;
              marketing?: T;
            };
        hours?:
          | T
          | {
              label?: T;
              value?: T;
              id?: T;
            };
        social?:
          | T
          | {
              facebook?: T;
              instagram?: T;
              twitter?: T;
              youtube?: T;
              linkedin?: T;
            };
      };
  companyLinks?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              hash?: T;
            };
        id?: T;
      };
  usefulLinks?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              hash?: T;
            };
        id?: T;
      };
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              hash?: T;
            };
        id?: T;
      };
  privacyLink?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              hash?: T;
            };
      };
  termsLink?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              hash?: T;
            };
      };
  enabled?: T;
  title?: T;
  description?: T;
  placeholder?: T;
  buttonLabel?: T;
  showScrollTop?: T;
  scrollTopThreshold?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "home-page_select".
 */
export interface HomePageSelect<T extends boolean = true> {
  heroTitle?: T;
  heroSubtitle?: T;
  heroBackgroundImage?: T;
  mobileButtonText?: T;
  desktopButtonText?: T;
  roomsTitle?: T;
  roomsSubtitle?: T;
  roomsBackgroundColor?: T;
  testimonialsTitle?: T;
  testimonialsSubtitle?: T;
  testimonialsBackgroundImage?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "experiences-page_select".
 */
export interface ExperiencesPageSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  descriptionText?: T;
  heroBackground?: T;
  features?:
    | T
    | {
        number?: T;
        label?: T;
        id?: T;
      };
  intro?: T;
  sectionImages?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  capacityOptions?:
    | T
    | {
        key?: T;
        label?: T;
        id?: T;
      };
  halls?:
    | T
    | {
        name?: T;
        size?: T;
        banquet?: T;
        classroom?: T;
        conference?: T;
        id?: T;
      };
  hallsInfoNote?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogPage_select".
 */
export interface BlogPageSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  introduction?: T;
  heroImage?: T;
  featured?:
    | T
    | {
        enabled?: T;
        posts?: T;
      };
  newsletter?:
    | T
    | {
        title?: T;
        description?: T;
        buttonText?: T;
      };
  labels?:
    | T
    | {
        allCategoryLabel?: T;
        readArticle?: T;
        read?: T;
        subscribeTitle?: T;
        subscribeCta?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "currentMenu_select".
 */
export interface CurrentMenuSelect<T extends boolean = true> {
  pdf?: T;
  note?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about-page_select".
 */
export interface AboutPageSelect<T extends boolean = true> {
  heroTitle?: T;
  heroSubtitle?: T;
  heroBackgroundImage?: T;
  panoramicImage?: T;
  storyTitle?: T;
  storyContent?: T;
  storyHighlights?:
    | T
    | {
        text?: T;
        id?: T;
      };
  storyImage?: T;
  heritageTitle?: T;
  heritageContent?: T;
  heritageImage?: T;
  missionTitle?: T;
  missionContent?: T;
  visionTitle?: T;
  visionContent?: T;
  values?:
    | T
    | {
        title?: T;
        description?: T;
        icon?: T;
        id?: T;
      };
  qualityPolicyTitle?: T;
  qualityPolicyContent?: T;
  qualityPolicyImage?: T;
  team?:
    | T
    | {
        name?: T;
        position?: T;
        bio?: T;
        image?: T;
        id?: T;
      };
  yearsOfExperience?: T;
  satisfiedGuests?: T;
  teamMembers?: T;
  foundedYear?: T;
  galleryImages?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  timelineEvents?:
    | T
    | {
        year?: T;
        date?: T;
        yearRange?: T;
        title?: T;
        description?: T;
        type?: T;
        importance?: T;
        icon?: T;
        id?: T;
      };
  historyStats?:
    | T
    | {
        foundedYear?: T;
        openedYear?: T;
        yearsInService?: T;
        legalAnniversary?: T;
        operationalAnniversary?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "privacy-policy-page_select".
 */
export interface PrivacyPolicyPageSelect<T extends boolean = true> {
  title?: T;
  lastUpdated?: T;
  introduction?: T;
  sections?:
    | T
    | {
        title?: T;
        content?: T;
        icon?: T;
        id?: T;
      };
  contactSection?:
    | T
    | {
        title?: T;
        email?:
          | T
          | {
              label?: T;
              address?: T;
            };
        phone?:
          | T
          | {
              label?: T;
              number?: T;
            };
        businessHours?:
          | T
          | {
              label?: T;
              schedule?: T;
            };
      };
  uiText?:
    | T
    | {
        loadingMessage?: T;
        errorMessage?: T;
        backToTopButton?: T;
        lastUpdatedPrefix?: T;
      };
  design?:
    | T
    | {
        showFloatingOrbs?: T;
        enableAnimations?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqs-page_select".
 */
export interface FaqsPageSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  backgroundImage?: T;
  categories?:
    | T
    | {
        categoryTitle?: T;
        categoryDescription?: T;
        categoryIcon?: T;
        questions?:
          | T
          | {
              question?: T;
              answer?: T;
              questionIcon?: T;
              featured?: T;
              id?: T;
            };
        id?: T;
      };
  supportTitle?: T;
  supportDescription?: T;
  contactButtonText?: T;
  contactButtonLink?: T;
  backToTopText?: T;
  showStats?: T;
  enableSearch?: T;
  animationsEnabled?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  _status?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null)
      | ({
          relationTo: 'blogs';
          value: string | Blog;
        } | null)
      | ({
          relationTo: 'rooms';
          value: string | Room;
        } | null)
      | ({
          relationTo: 'testimonials';
          value: string | Testimonial;
        } | null)
      | ({
          relationTo: 'experiences';
          value: string | Experience;
        } | null);
    global?: ('home-page' | 'experiences-page' | 'about-page' | 'privacy-policy-page' | 'faqs-page') | null;
    user?: (string | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}